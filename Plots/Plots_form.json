{
  "assignment_enabled": false,
  "auto_assign": false,
  "bounding_box": [
    0.003773868081227,
    -75.5283815,
    46.7732978,
    -0.000747665762901
  ],
  "created_at": "2018-03-22T21:02:01Z",
  "description": "Small areas of well-defined shape/size, within which environmental conditions are relatively homogenous. Example: forest inventory plots.",
  "elements": [
    {
      "data_name": "study_site",
      "default_value": null,
      "description": null,
      "disabled": false,
      "display": "inline",
      "elements": [
        {
          "allow_creating_records": true,
          "allow_existing_records": true,
          "allow_multiple_records": false,
          "allow_updating_records": true,
          "data_name": "site",
          "default_previous_value": true,
          "default_value": null,
          "description": "The study site within which the plot is located.\n\nBefore creating a new site, ask co-workers if a site has been created on another device but not yet synced.\n\nIf not, create a new site record.",
          "disabled": false,
          "form_id": "",
          "hidden": false,
          "key": "4f16",
          "label": "Site",
          "record_conditions": null,
          "record_conditions_type": null,
          "record_defaults": [
            {
              "destination_field_key": "8d8f",
              "source_field_key": "33f0"
            }
          ],
          "required": true,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "RecordLinkField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "site_id",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": true,
          "key": "8d8f",
          "label": "Site ID",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        }
      ],
      "hidden": false,
      "key": "c215",
      "label": "Study Site",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": null,
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": null
    },
    {
      "data_name": "plot",
      "default_value": null,
      "description": null,
      "disabled": false,
      "display": "inline",
      "elements": [
        {
          "data_name": "plot_id",
          "default_previous_value": false,
          "default_value": null,
          "description": "An identifier for the plot. Defined automatically as the Unix timestamp (= number fo seconds since 1970-01-01 00:00:00UTC) - 1519142458.",
          "disabled": true,
          "hidden": false,
          "key": "2eaa",
          "label": "Plot ID",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": "[a-zA-Z0-9.-]+",
          "pattern_description": "Alphanumeric Only",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "plot_field_id",
          "default_previous_value": false,
          "default_value": null,
          "description": "A field identifier for the plot.\n",
          "disabled": false,
          "hidden": false,
          "key": "8a8c",
          "label": "Plot Field ID",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": "([^\\r\\n\\s]+)[a-zA-Z0-9]+(?!\\s\\r|\\n)",
          "pattern_description": "And alpha numeric in single line only",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "allow_other": true,
          "choice_list_id": "",
          "data_name": "first_established_by",
          "default_previous_value": false,
          "default_value": null,
          "description": "A list of names of people responsible for establishing the original plot. The primary surveyor should be listed first.",
          "disabled": false,
          "hidden": false,
          "key": "6b20",
          "label": "First Established By",
          "max_length": null,
          "min_length": null,
          "multiple": true,
          "required": true,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "ChoiceField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "date_first_established",
          "default_previous_value": false,
          "default_value": "now",
          "description": "The date on which the plot was originally established.",
          "disabled": false,
          "hidden": false,
          "key": "e894",
          "label": "Date First Established",
          "required": true,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "DateTimeField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        }
      ],
      "hidden": false,
      "key": "23ce",
      "label": "Plot",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": null,
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": null
    },
    {
      "data_name": "location",
      "default_value": null,
      "description": "Location of the geographic center of the plot.",
      "disabled": false,
      "display": "inline",
      "elements": [
        {
          "data_name": "latitude",
          "default_previous_value": false,
          "default_value": null,
          "description": "The geographic latitude (in decimal degrees, using the EPSG:4326 / WGS84 \nspatial reference system) of the geographic center of the plot. Positive values are north of the Equator, negative values are south of it. Legal values lie between -90 and 90, inclusive.",
          "disabled": true,
          "format": "decimal",
          "hidden": false,
          "key": "c820",
          "label": "Latitude (degrees)",
          "max": 90.0,
          "max_length": null,
          "min": -90.0,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "longitude",
          "default_previous_value": false,
          "default_value": null,
          "description": "The geographic longitude (in decimal degrees, using the EPSG:4326 / WGS84 spatial reference system) of the geographic center of the plot. Positive values are east of the Greenwich Meridian, negative values are west of it. Legal values lie between -180 and 180, inclusive.",
          "disabled": true,
          "format": "decimal",
          "hidden": false,
          "key": "6278",
          "label": "Longitude (degrees)",
          "max": 180.0,
          "max_length": null,
          "min": -180.0,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "horizontal_accuracy",
          "default_previous_value": false,
          "default_value": null,
          "description": "The horizontal distance (in meters) from the given latitude and longitude describing the smallest circle containing the whole of the location of the plot center. Leave the value empty if the uncertainty is unknown, cannot be estimated, or is not applicable (because there are no coordinates).  Zero is not a valid value for this term.\n\nNOTE: it is not clear how Fulcrum gets this value, and what it is. For a general discussion about location accuracy, see: http://www.navipedia.net/index.php/Accuracy.  Presumably Fulcrum takes it directly from the device GPS, although this might mean different things in Android or iOS.\n\nIn iOS, which metric of horizontal accuracy is used is not specified (see: https://developer.apple.com/documentation/corelocation/cllocation/1423599-horizontalaccuracy). They only say that it corresponds to \"the radius of uncertainty for the location, measured in meters\". This implies a 2D measure of horizontal accuracy.\n\nAndroid provides a much clearer definition of horizontal accuracy (see https://developer.android.com/reference/android/location/Location.html#getAccuracy()): \"We define horizontal accuracy as the radius of 68% confidence. In other words, if you draw a circle centered at this location's latitude and longitude, and with a radius equal to the accuracy, then there is a 68% probability that the true location is inside the circle\".",
          "disabled": true,
          "format": "decimal",
          "hidden": false,
          "key": "60fb",
          "label": "Horizontal Accuracy (m)",
          "max": null,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "altitude",
          "default_previous_value": false,
          "default_value": null,
          "description": "The elevation in meters (m) above the ellipsoid defined by the EPSG:4326 / WGS84 spatial reference system. This is commonly referred to as the height in meters above mean sea level (AMSL).",
          "disabled": true,
          "format": "decimal",
          "hidden": false,
          "key": "ba67",
          "label": "Altitude (m)",
          "max": 8850.0,
          "max_length": null,
          "min": -413.0,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "vertical_accuracy",
          "default_previous_value": false,
          "default_value": null,
          "description": "The vertical uncertainty associated with an altitude measurement, in meters (m). Leave the value empty if the uncertainty is unknown, cannot be estimated, or is not applicable (because there are no coordinates).  Zero is not a valid value for this term.\n\nNOTE: it is not clear how Fulcrum gets this value, and what it is. For a general discussion about location accuracy, see: http://www.navipedia.net/index.php/Accuracy.  Presumably Fulcrum takes it directly from the device GPS, although this might mean different things in Android or iOS.\n\nIn iOS, which metric of vertical accuracy is used is not specified (see: https://developer.apple.com/documentation/corelocation/cllocation/1423550-verticalaccuracy). They only say that it corresponds to \"the accuracy of the altitude value, measured in meters\".\n\nAndroid provides a much clearer definition of vertical accuracy (see https://developer.android.com/reference/android/location/Location.html#getVerticalAccuracyMeters()): \"We define vertical accuracy at 68% confidence. Specifically, as 1-side of the 2-sided range above and below the estimated altitude, within which there is a 68% probability of finding the true altitude. In the case where the underlying distribution is assumed Gaussian normal, this would be considered 1 standard deviation. For example, if the estimated altitude is 150 m, and the vertical accuracy is 20 m then there is a 68% probability of the true altitude being between 130 and 170 m\".",
          "disabled": true,
          "format": "decimal",
          "hidden": false,
          "key": "73ef",
          "label": "Vertical Accuracy (m)",
          "max": null,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "current_gps_information",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "ecd3",
          "label": "Current GPS Information",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "gps_info",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "1fd2",
          "label": "GPS Info",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "update_location_with_gps",
          "default_url": "",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "62e0",
          "label": "Update Location with GPS",
          "required": false,
          "required_conditions": [],
          "required_conditions_type": null,
          "type": "HyperlinkField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "gps_informations_updated_from_corners",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "0159",
          "label": "GPS informations updated from Corners",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": [
            {
              "field_key": "fd85",
              "operator": "equal_to",
              "value": "4"
            }
          ],
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": "all"
        }
      ],
      "hidden": false,
      "key": "6bd1",
      "label": "Location",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": null,
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": null
    },
    {
      "data_name": "plot_shape_size",
      "default_value": null,
      "description": null,
      "disabled": false,
      "display": "inline",
      "elements": [
        {
          "allow_other": false,
          "choices": [
            {
              "label": "circular",
              "value": "circular"
            },
            {
              "label": "square",
              "value": "square"
            },
            {
              "label": "rectangular",
              "value": "rectangular"
            }
          ],
          "data_name": "plot_shape",
          "default_previous_value": false,
          "default_value": null,
          "description": "The shape of the plot. Options are: circular, square or rectangular.",
          "disabled": false,
          "hidden": false,
          "key": "d2e2",
          "label": "Plot Shape",
          "multiple": false,
          "required": true,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "ChoiceField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "plot_diameter_m",
          "default_previous_value": false,
          "default_value": null,
          "description": "The diameter in meters (m) of a circular plot.",
          "disabled": false,
          "format": "decimal",
          "hidden": false,
          "key": "d599",
          "label": "Plot Diameter (m)",
          "max": null,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": true,
          "required_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "circular"
            }
          ],
          "required_conditions_type": "all",
          "type": "TextField",
          "visible_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "circular"
            }
          ],
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": "all"
        },
        {
          "data_name": "plot_length_m",
          "default_previous_value": false,
          "default_value": null,
          "description": "The length (=longest side) in meters (m) of a rectangular plot.",
          "disabled": false,
          "format": "decimal",
          "hidden": false,
          "key": "56e7",
          "label": "Plot Length (m)",
          "max": 100.0,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": true,
          "required_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "rectangular"
            }
          ],
          "required_conditions_type": "all",
          "type": "TextField",
          "visible_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "rectangular"
            }
          ],
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": "all"
        },
        {
          "data_name": "plot_width_m",
          "default_previous_value": false,
          "default_value": null,
          "description": "The width (=shortest side) in meters (m) of rectangular or square plot. In a square plot, length and width have the same length.",
          "disabled": false,
          "format": "decimal",
          "hidden": false,
          "key": "8279",
          "label": "Plot Width (m)",
          "max": 100.0,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": true,
          "required_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "square"
            },
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "rectangular"
            }
          ],
          "required_conditions_type": "any",
          "type": "TextField",
          "visible_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "square"
            },
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "rectangular"
            }
          ],
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": "any"
        },
        {
          "data_name": "azimuth_width_degrees",
          "default_previous_value": false,
          "default_value": null,
          "description": "The orientation of a square or rectangular plot, defined as the azimuth to true north in degrees decimal (north = 0, east = 90, south = 180) of the width (= shortest side of a rectangle) axis.",
          "disabled": false,
          "format": "decimal",
          "hidden": false,
          "key": "2fbc",
          "label": "Azimuth of Width Axis (degrees) ",
          "max": 180.0,
          "max_length": null,
          "min": 0.0,
          "min_length": null,
          "numeric": true,
          "required": true,
          "required_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "square"
            },
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "rectangular"
            }
          ],
          "required_conditions_type": "any",
          "type": "TextField",
          "visible_conditions": [
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "square"
            },
            {
              "field_key": "d2e2",
              "operator": "equal_to",
              "value": "rectangular"
            }
          ],
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": "any"
        }
      ],
      "hidden": false,
      "key": "69c0",
      "label": "Plot Shape and Size",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": null,
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": null
    },
    {
      "data_name": "plot_geometry",
      "default_value": null,
      "description": "Location of plot corners.",
      "disabled": false,
      "display": "inline",
      "elements": [
        {
          "data_name": "corners",
          "default_value": null,
          "description": "Points representing plot corners, for square or rectangular plots. Must include all four corners.",
          "disabled": false,
          "elements": [
            {
              "data_name": "corner_number",
              "default_previous_value": false,
              "default_value": "1",
              "description": "An identifier for a plot corner.",
              "disabled": true,
              "format": "integer",
              "hidden": false,
              "key": "a721",
              "label": "Corner Number",
              "max": null,
              "max_length": null,
              "min": null,
              "min_length": null,
              "numeric": true,
              "required": false,
              "required_conditions": null,
              "required_conditions_type": null,
              "type": "TextField",
              "visible_conditions": null,
              "visible_conditions_behavior": "clear",
              "visible_conditions_type": null
            },
            {
              "data_name": "corner_id",
              "default_previous_value": false,
              "default_value": null,
              "description": "An identifier for the plot corner.",
              "disabled": true,
              "hidden": false,
              "key": "2844",
              "label": "Corner ID",
              "max_length": null,
              "min_length": null,
              "numeric": false,
              "pattern": null,
              "pattern_description": null,
              "required": false,
              "required_conditions": null,
              "required_conditions_type": null,
              "type": "TextField",
              "visible_conditions": null,
              "visible_conditions_behavior": "clear",
              "visible_conditions_type": null
            },
            {
              "allow_other": true,
              "choices": [
                {
                  "label": "SW",
                  "value": "SW"
                },
                {
                  "label": "SE",
                  "value": "SE"
                },
                {
                  "label": "NW",
                  "value": "NW"
                },
                {
                  "label": "NE",
                  "value": "NE"
                }
              ],
              "data_name": "corner_field_id",
              "default_previous_value": false,
              "default_value": null,
              "description": null,
              "disabled": false,
              "hidden": false,
              "key": "40b2",
              "label": "Corner Field ID",
              "multiple": false,
              "required": true,
              "required_conditions": null,
              "required_conditions_type": null,
              "type": "ChoiceField",
              "visible_conditions": null,
              "visible_conditions_behavior": "clear",
              "visible_conditions_type": null
            },
            {
              "data_name": "corner_location",
              "default_value": null,
              "description": null,
              "disabled": false,
              "display": "inline",
              "elements": [
                {
                  "data_name": "corner_latitude_degrees",
                  "default_previous_value": false,
                  "default_value": null,
                  "description": null,
                  "disabled": false,
                  "format": "decimal",
                  "hidden": false,
                  "key": "a823",
                  "label": "Latitude (degrees)",
                  "max": null,
                  "max_length": null,
                  "min": null,
                  "min_length": null,
                  "numeric": true,
                  "required": false,
                  "required_conditions": null,
                  "required_conditions_type": null,
                  "type": "TextField",
                  "visible_conditions": null,
                  "visible_conditions_behavior": "clear",
                  "visible_conditions_type": null
                },
                {
                  "data_name": "corner_longitude_degrees",
                  "default_previous_value": false,
                  "default_value": null,
                  "description": null,
                  "disabled": false,
                  "format": "decimal",
                  "hidden": false,
                  "key": "23eb",
                  "label": "Longitude (degrees)",
                  "max": null,
                  "max_length": null,
                  "min": null,
                  "min_length": null,
                  "numeric": true,
                  "required": false,
                  "required_conditions": null,
                  "required_conditions_type": null,
                  "type": "TextField",
                  "visible_conditions": null,
                  "visible_conditions_behavior": "clear",
                  "visible_conditions_type": null
                },
                {
                  "data_name": "corner_horizontal_accuracy_m",
                  "default_previous_value": false,
                  "default_value": null,
                  "description": null,
                  "disabled": false,
                  "format": "decimal",
                  "hidden": false,
                  "key": "3230",
                  "label": "Horizontal Accuracy (m)",
                  "max": null,
                  "max_length": null,
                  "min": null,
                  "min_length": null,
                  "numeric": true,
                  "required": false,
                  "required_conditions": null,
                  "required_conditions_type": null,
                  "type": "TextField",
                  "visible_conditions": null,
                  "visible_conditions_behavior": "clear",
                  "visible_conditions_type": null
                },
                {
                  "data_name": "corner_altitude_m",
                  "default_previous_value": false,
                  "default_value": null,
                  "description": null,
                  "disabled": false,
                  "format": "decimal",
                  "hidden": false,
                  "key": "aaf8",
                  "label": "Altitude (m)",
                  "max": null,
                  "max_length": null,
                  "min": null,
                  "min_length": null,
                  "numeric": true,
                  "required": false,
                  "required_conditions": null,
                  "required_conditions_type": null,
                  "type": "TextField",
                  "visible_conditions": null,
                  "visible_conditions_behavior": "clear",
                  "visible_conditions_type": null
                },
                {
                  "data_name": "corner_vertical_accuracy_m",
                  "default_previous_value": false,
                  "default_value": null,
                  "description": null,
                  "disabled": false,
                  "format": "decimal",
                  "hidden": false,
                  "key": "cc77",
                  "label": "Vertical Accuracy (m)",
                  "max": null,
                  "max_length": null,
                  "min": null,
                  "min_length": null,
                  "numeric": true,
                  "required": false,
                  "required_conditions": null,
                  "required_conditions_type": null,
                  "type": "TextField",
                  "visible_conditions": null,
                  "visible_conditions_behavior": "clear",
                  "visible_conditions_type": null
                },
                {
                  "data_name": "corner_gps_info",
                  "default_value": null,
                  "description": null,
                  "disabled": false,
                  "hidden": false,
                  "key": "1087",
                  "label": "Corner GPS Info",
                  "required": false,
                  "required_conditions": null,
                  "required_conditions_type": null,
                  "type": "Label",
                  "visible_conditions": null,
                  "visible_conditions_behavior": "clear",
                  "visible_conditions_type": null
                },
                {
                  "data_name": "update_corner_location_with_gps",
                  "default_url": "",
                  "default_value": null,
                  "description": null,
                  "disabled": false,
                  "hidden": false,
                  "key": "643e",
                  "label": "Update Location with GPS",
                  "required": false,
                  "required_conditions": [],
                  "required_conditions_type": null,
                  "type": "HyperlinkField",
                  "visible_conditions": null,
                  "visible_conditions_behavior": "clear",
                  "visible_conditions_type": null
                }
              ],
              "hidden": false,
              "key": "a92b",
              "label": "Location",
              "required": false,
              "required_conditions": null,
              "required_conditions_type": null,
              "type": "Section",
              "visible_conditions": null,
              "visible_conditions_behavior": "clear",
              "visible_conditions_type": null
            }
          ],
          "geometry_required": true,
          "geometry_types": [
            "Point"
          ],
          "hidden": false,
          "key": "b485",
          "label": "Corners",
          "max_length": 4,
          "min_length": 0,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "title_field_key": null,
          "title_field_keys": [
            "2844"
          ],
          "type": "Repeatable",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "number_of_corners",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "format": "decimal",
          "hidden": true,
          "key": "fd85",
          "label": "Number of Corners",
          "max": null,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "average_latitude",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "format": "decimal",
          "hidden": true,
          "key": "71e8",
          "label": "Average Latitude",
          "max": null,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "average_longitude",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "format": "decimal",
          "hidden": true,
          "key": "6927",
          "label": "Average Longitude",
          "max": null,
          "max_length": null,
          "min": null,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        }
      ],
      "hidden": false,
      "key": "4f24",
      "label": "Plot Geometry",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": [
        {
          "field_key": "d2e2",
          "operator": "equal_to",
          "value": "square"
        },
        {
          "field_key": "d2e2",
          "operator": "equal_to",
          "value": "rectangular"
        }
      ],
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": "any"
    },
    {
      "data_name": "optional_plot_info",
      "default_value": null,
      "description": null,
      "disabled": false,
      "display": "inline",
      "elements": [
        {
          "data_name": "plot_remarks",
          "default_previous_value": false,
          "default_value": null,
          "description": "Comments or notes about the plot.",
          "disabled": false,
          "hidden": false,
          "key": "1352",
          "label": "Plot Remarks",
          "max_length": 200,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "plot_photos",
          "default_value": null,
          "description": "Photos of the plot.",
          "disabled": false,
          "hidden": false,
          "key": "fe60",
          "label": "Plot Photos",
          "max_length": 5,
          "min_length": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "PhotoField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "plot_audio_remarks",
          "default_value": null,
          "description": "Audio comments about the plot.",
          "disabled": false,
          "hidden": false,
          "key": "1df3",
          "label": "Plot Audio Remarks",
          "max_length": null,
          "min_length": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "track_enabled": false,
          "type": "AudioField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        }
      ],
      "hidden": false,
      "key": "773d",
      "label": "Optional Plot Info",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": null,
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": null
    },
    {
      "data_name": "data_quality_control",
      "default_value": null,
      "description": null,
      "disabled": false,
      "display": "inline",
      "elements": [
        {
          "data_name": "deleted",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "5740",
          "label": "Deleted",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "deleted_by",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "ba55",
          "label": "Deleted By",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "date_deleted",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "a7c1",
          "label": "Date Deleted",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "DateTimeField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "rejection",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "85b1",
          "label": "Rejection",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "rejected_by",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "e635",
          "label": "Rejected By",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "date_rejected",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "7dde",
          "label": "Date Rejected",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "DateTimeField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "verification",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "e44a",
          "label": "Verification",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "verified_by",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "2802",
          "label": "Verified By",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "date_verified",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "8089",
          "label": "Date Verified",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "DateTimeField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "submission",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "8444",
          "label": "Submission",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "submitted_by",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "6537",
          "label": "Submitted By",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "date_submitted",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "6dbf",
          "label": "Date Submitted",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "DateTimeField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "approbation",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "8d32",
          "label": "Approbation",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "approved_by",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "2665",
          "label": "Approved By",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "date_approved",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "00fe",
          "label": "Date Approved",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "DateTimeField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "publication",
          "default_value": null,
          "description": null,
          "disabled": false,
          "hidden": false,
          "key": "2ea0",
          "label": "Publication",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "Label",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "published_by",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "bb30",
          "label": "Published By",
          "max_length": null,
          "min_length": null,
          "numeric": false,
          "pattern": null,
          "pattern_description": null,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        },
        {
          "data_name": "date_published",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "hidden": false,
          "key": "8550",
          "label": "Date Published",
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "DateTimeField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        }
      ],
      "hidden": false,
      "key": "eb28",
      "label": "Data Quality Control",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": null,
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": null
    },
    {
      "data_name": "hidden_variables",
      "default_value": null,
      "description": null,
      "disabled": false,
      "display": "drilldown",
      "elements": [
        {
          "data_name": "number_of_rejections",
          "default_previous_value": false,
          "default_value": null,
          "description": null,
          "disabled": true,
          "format": "decimal",
          "hidden": true,
          "key": "e6d6",
          "label": "Number of Rejections",
          "max": 3.0,
          "max_length": null,
          "min": 0.0,
          "min_length": null,
          "numeric": true,
          "required": false,
          "required_conditions": null,
          "required_conditions_type": null,
          "type": "TextField",
          "visible_conditions": null,
          "visible_conditions_behavior": "clear",
          "visible_conditions_type": null
        }
      ],
      "hidden": true,
      "key": "ac19",
      "label": "Hidden Variables",
      "required": false,
      "required_conditions": null,
      "required_conditions_type": null,
      "type": "Section",
      "visible_conditions": null,
      "visible_conditions_behavior": "clear",
      "visible_conditions_type": null
    }
  ],
  "geometry_required": true,
  "geometry_types": [
    "Point"
  ],
  "hidden_on_dashboard": false,
  "id": "",
  "image": "https://fulcrumapp.s3.amazonaws.com/form-images/fd35169b-186c-4548-a5e5-488bd7432152-93ccec63-f04b-42d0-84a1-34e8a7da55c7.png",
  "image_large": "https://fulcrumapp.s3.amazonaws.com/form-images/large_fd35169b-186c-4548-a5e5-488bd7432152-93ccec63-f04b-42d0-84a1-34e8a7da55c7.png",
  "image_small": "https://fulcrumapp.s3.amazonaws.com/form-images/small_fd35169b-186c-4548-a5e5-488bd7432152-93ccec63-f04b-42d0-84a1-34e8a7da55c7.png",
  "image_thumbnail": "https://fulcrumapp.s3.amazonaws.com/form-images/thumb_fd35169b-186c-4548-a5e5-488bd7432152-93ccec63-f04b-42d0-84a1-34e8a7da55c7.png",
  "name": "Plots",
  "projects_enabled": true,
  "record_count": 71,
  "record_title_key": "2eaa",
  "script": "/* SAVE VERSIONS */\n\n/*****************************************************************\n\n            FUNCTIONS DATA EVENTS PLOTS\n\n*******************************************************************/\n\n/*\n * DEBUG\n */\nfunction viewConfig(){\n  SHOWERRORS(true);\n  ALERT(\">\"+INSPECT(CONFIG()));\n}\n\n/*\n * INTERVAL\n */\nfunction stopInterval(interval,tmp){\n  SETTIMEOUT(function() {\n    CLEARINTERVAL(interval);\n  }, tmp);\n}\n\n/*\n * CONFIGURATION\n */\n\n// Enable or disable manual location\nfunction setConfig4Draft(b){\n  if (b==true||b==false){\n    var config = {\n      drafts_enabled: b\n    };\n    SETFORMATTRIBUTES(config);\n  }\n}\n\nfunction setConfig4Location(b){\n  if (b==true||b==false){\n    var config = {\n      manual_location_enabled: b\n    };\n    SETFORMATTRIBUTES(config);\n  }\n}\n\nfunction setConfig4LocationDraft(b){\n  setConfig4Draft(b);\n  setConfig4Location(b);\n}\n\n/*\n * GPS\n */\n\n//Function get horizontal accuracy value no matters from where\nfunction horizontalAccuracyNoMatters(){\n  if (EXISTS(CONFIG().recordHorizontalAccuracy)){\n    return CONFIG().recordHorizontalAccuracy;\n  }\n  if (EXISTS(CONFIG().recordUpdatedAccuracy)){\n    return CONFIG().recordUpdatedAccuracy;\n  }\n  if (EXISTS(CONFIG().recordCreatedAccuracy)){\n    return CONFIG().recordCreatedAccuracy;\n  }\n  if (EXISTS(CONFIG().featureCreatedAccuracy)){\n    return CONFIG().featureCreatedAccuracy;\n  }\n  if (EXISTS(CONFIG().featureUpdatedAccuracy)) {\n    return CONFIG().featureUpdatedAccuracy;\n  }\n  return '';\n}\n\n//Function get vertical accuracy value no matters from where\nfunction verticalAccuracyNoMatters(){\n  var r = CONFIG().recordVerticalAccuracy;\n  if (EXISTS(r)){\n    //ALERT('Vertical Accuracy from iPhone');\n    //DEBUG\n    //viewConfig();\n    return cleanDigit(r,2);\n  } else {\n    //DEBUG\n    //viewConfig();\n    //ALERT('No vertical Accuracy');\n  }\n\n  return '';\n}\n\n// Clean String Digit to a number after the dot\n// Remove 0 after on rigth\nfunction cleanDigit(val,num){\n  if (EXISTS(val)){\n    var tmp = FIXED(NUM(val),num, true);\n    var tmp2 = str2Num(tmp);\n    return tmp2;\n  }\n  return '';\n}\n\n// From String to number\nfunction str2Num(val){\n  if (ISNAN(val)){\n    var tmp = \"\"+val;\n    var nume = NUM(SUBSTITUTE(tmp,',','.'));\n    if (ISNUMBER(nume)){\n      return nume;\n    }\n    return val;\n  }\n  return val;\n}\n\n\n// Clean CURRENTLOCATION()\n// If CURRENTLOCATION() not available return empty values and .empty = true\nfunction getGPSLocation(){\n  var location = CURRENTLOCATION();\n  if (location) {\n    var cleanLocation = {};\n    \n    var alti = location.altitude;\n    alti     = cleanDigit(alti,2);\n    cleanLocation.altitude=alti;\n    \n    var lati = location.latitude;\n    lati     = cleanDigit(lati,7);\n    cleanLocation.latitude=lati;\n    \n    var long = location.longitude;\n    long     = cleanDigit(long,7);\n    cleanLocation.longitude=long;\n    \n    var accu = location.accuracy;\n    accu = cleanDigit(accu,2);\n    cleanLocation.accuracy=accu;\n    \n    cleanLocation.course=location.course;\n    cleanLocation.speed=location.speed;\n    cleanLocation.timestamp=location.timestamp;\n    cleanLocation.empty=false;\n    \n    return cleanLocation;\n  } else {\n    var emptyLocation = {\n      altitude:'',\n      latitude:'',\n      longitude:'',\n      accuracy:'',\n      course:'',\n      speed:'',\n      timestamp:'',\n      empty:true\n    };\n    return emptyLocation;\n  }\n}\n\n// GET information from current location\nfunction getGPSLatitude() {return getGPSLocation().latitude;}\nfunction getGPSLongitude(){return getGPSLocation().longitude;}\nfunction getGPSHAccuracy(){return getGPSLocation().accuracy;}\nfunction getGPSAltitude() {return getGPSLocation().altitude;}\n\n// Search first in config then in current location\nfunction getLongitude(){\n  if (EXISTS(LONGITUDE())){\n    return cleanDigit(LONGITUDE(),7);\n  } else if (EXISTS(CONFIG().recordGeometry.coordinates[0])){\n    return cleanDigit(CONFIG().recordGeometry.coordinates[0],7);\n  }\n  return getGPSLongitude();\n}\n\nfunction getLatitude(){\n  if (EXISTS(LATITUDE())){\n    return cleanDigit(LATITUDE(),7);\n  } else if (EXISTS(CONFIG().recordGeometry.coordinates[1])){\n    return cleanDigit(CONFIG().recordGeometry.coordinates[1],7);\n  }\n  return getGPSLatitude();\n}\n\nfunction getAltitude(){\n  if (EXISTS(ALTITUDE())){\n    return cleanDigit(ALTITUDE(),2);\n  }\n  return getGPSAltitude();\n}\n\n// Get the GPS information on live\n// https://developer.fulcrumapp.com/data-events/examples/display-gps-info/\nfunction updateLocationInfo() {\n  var location = getGPSLocation();\n  // if there is no location, display a special message\n  if (location.empty) {\n    SETLABEL('gps_info', 'Current GPS Information.\\nYour GPS is not accessible. No Location Available');\n    SETLABEL('corner_gps_info', 'Current GPS Information.\\nYour GPS is not accessible. No Location Available');\n    return;\n  }\n  //SETHIDDEN('update_location_with_gps', false);\n\n  // format the display of the location data\n  var message = [\n    'Current GPS Information',\n    'Latitude: ' + location.latitude,\n    'Longitude: ' + location.longitude,\n    'Horizontal Accuracy: ' + location.accuracy,\n    'Altitude: ' + location.altitude\n  ].join('\\n');\n\n  // set the label property of the label on the form\n  SETLABEL('gps_info', message);\n  SETLABEL('corner_gps_info', message);\n}\n\n// Make GPS not available\nfunction gpsNotAccessible(){\n  SETHIDDEN('update_location_with_gps', true);\n  SETHIDDEN('current_gps_information', true);\n  SETHIDDEN('gps_info', true);\n  SETHIDDEN('update_corner_location_with_gps', true);\n  SETHIDDEN('corner_gps_info', true);\n  setConfig4LocationDraft(false);\n}\n\n// Make GPS available\nfunction gpsAccessible(){\n  SETREADONLY('update_location_with_gps', true);\n  SETHIDDEN('update_location_with_gps', false);\n  SETHIDDEN('current_gps_information', true);\n  SETHIDDEN('gps_info', false);\n  SETLABEL('gps_info', 'Current GPS Information.\\nYou can change GPS information.');\n  SETREADONLY('update_corner_location_with_gps', true);\n  SETHIDDEN('update_corner_location_with_gps', false);\n  SETHIDDEN('corner_gps_info', false);\n  SETLABEL('corner_gps_info', 'Current GPS Information.\\nYou can change GPS information.');\n  // go ahead and update it now...\n  updateLocationInfo();\n  // ... and every 3 seconds\n  SETINTERVAL(updateLocationInfo, 3000);\n  setConfig4LocationDraft(true);\n}\n\n\n/*\n * STATUS and ACCESS TO DATA\n */\nvar projectNameGV    = \"\";\nvar fieldUserRolesGV = ['Standard User','Graduate Student']; // include more roles if needed\nvar usernameGV       = USERFULLNAME();\nvar readOnlyStatusesGV = ['deleted', 'verified', 'submitted', 'approved', 'published'];\n\nfunction isRejected(){\n  return (STATUS()=='rejected' || EXISTS($rejected_by));\n}\n\nfunction isVerified(){\n  return STATUS()=='verified';\n}\n\nfunction isStandardUser(){\n  return ISROLE(fieldUserRolesGV);\n}\n\nfunction isReadOnly(){\n  return CONTAINS(readOnlyStatusesGV, STATUS());\n}\n\nfunction isEditableByUsers(){\n  return ISROLE(fieldUserRolesGV) && !isReadOnly();\n}\n\nfunction isLocked4Users(){\n  return ISROLE(fieldUserRolesGV) && isReadOnly();\n}\n\nfunction getNumOfCorners() {\n  if ($corners != null){\n    return LEN(ARRAY(REPEATABLEVALUES($corners, 'corner_number')));\n  } else {\n    return 0;\n  }\n}\n\nfunction setNumOfCorners() {\n  SETVALUE('number_of_corners',getNumOfCorners());\n}\n\nfunction notSameCornersNumber(){\n  if (VALUE('number_of_corners')==getNumOfCorners()){\n    return false;\n  } else {\n    return true;\n  }\n}\n\n/*\n * Update from corners\n */\nfunction getAverageTab(tab){\n  var n = 0;\n  var b = 0;\n  tab.forEach(function(element) {\n    if (EXISTS(element)){\n      b += element;\n      n += 1;\n    }\n  });\n  if (n>0){\n    return b/n;\n  } else {\n    return '';\n  }\n}\n\nfunction getLatOfCorners() {\n  if ($corners != null){\n    return getAverageTab(ARRAY(REPEATABLEVALUES($corners, 'corner_latitude_degrees')));\n  } else {\n    return 0;\n  }\n}\n\nfunction getLonOfCorners() {\n  if ($corners != null){\n    return getAverageTab(ARRAY(REPEATABLEVALUES($corners, 'corner_longitude_degrees')));\n  } else {\n    return 0;\n  }\n}\n\nfunction getHoriAccOfCorners() {\n  if ($corners != null){\n    return getAverageTab(ARRAY(REPEATABLEVALUES($corners, 'corner_horizontal_accuracy_m')));\n  } else {\n    return 0;\n  }\n}\n\nfunction getAltOfCorners() {\n  if ($corners != null){\n    return getAverageTab(ARRAY(REPEATABLEVALUES($corners, 'corner_altitude_m')));\n  } else {\n    return 0;\n  }\n}\n\nfunction getVertAccOfCorners() {\n  if ($corners != null){\n    return getAverageTab(ARRAY(REPEATABLEVALUES($corners, 'corner_vertical_accuracy_m')));\n  } else {\n    return 0;\n  }\n}\n\nfunction setLocationInfoFromCorners(){\n  if (getNumOfCorners()>3){\n    var newLat = getLatOfCorners();\n    var newLon = getLonOfCorners();\n    var newHoriAcc = getHoriAccOfCorners();\n    var newAlt = getAltOfCorners();\n    var newVertAcc = getVertAccOfCorners();\n    SETVALUE('latitude',newLat);\n    SETVALUE('longitude',newLon);\n    SETVALUE('horizontal_accuracy',newHoriAcc);\n    SETVALUE('altitude',newAlt);\n    SETVALUE('vertical_accuracy',newVertAcc);\n    SETHIDDEN('update_location_with_gps', true);\n    SETHIDDEN('current_gps_information', true);\n    SETHIDDEN('gps_info', true);\n    setNumOfCorners();\n  } else {\n    SETHIDDEN('update_location_with_gps', false);\n    SETHIDDEN('current_gps_information', false);\n    SETHIDDEN('gps_info', false);\n  }\n}\n\nfunction updateLocationInfoFromCorners() {\n  setLocationInfoFromCorners();\n  stopInterval(SETINTERVAL(setLocationInfoFromCorners, 1000),2100);\n}\n\n\n/*\n * Update Corner ID\n */\nfunction setCornerId(){\n  var plotID = VALUE('plot_id');\n  var cornerFieldId = CHOICEVALUE($corner_field_id);\n  if (EXISTS(plotID) && EXISTS(cornerFieldId)){\n    SETVALUE('corner_id',plotID+'-'+cornerFieldId);\n  }\n}\n\nfunction updateCornerId() {\n  setCornerId();\n  stopInterval(SETINTERVAL(setCornerId, 500),1000);\n}\n\n/*\n * Change values visibility\n */\nfunction changeValues(){\n  DATANAMES().forEach(function(dataName) {\n    SETREADONLY(dataName, null);\n  });\n  loadDataQualityControl();\n  setConfig4LocationDraft(true);\n  gpsAccessible();\n}\n\nfunction readOnlyValues(){\n  DATANAMES().forEach(function(dataName) {\n    SETREADONLY(dataName, true);\n  });\n  loadDataQualityControl();\n  setConfig4LocationDraft(false);\n  gpsNotAccessible();\n}\n\n/*\n * Tests on plot shape\n */\nfunction plotIsASquare(){\n  SETTIMEOUT(testPlotIsASquare, 3000);\n}\n\nfunction testPlotIsASquare(){\n  var pw = VALUE('plot_width_m');\n  var pl = VALUE('plot_length_m');\n  var pwb = !ISBLANK($plot_width_m);\n  var plb = !ISBLANK($plot_length_m);\n  if (pwb && plb && pw==pl){\n    SETVALUE('plot_shape','square');\n    SETVALUE('plot_length_m','');\n    ALERT('Plot shape has been set to square because its width was equal to its length.');\n    return true;\n  }\n  return false;\n}  \n\nfunction plotCheckRectangular(){\n  SETTIMEOUT(testPlotCheckRectangular, 3000);\n}\n\nfunction testPlotCheckRectangular(){\n  var pw = VALUE('plot_width_m');\n  var pl = VALUE('plot_length_m');\n  var pwb = !ISBLANK($plot_width_m);\n  var plb = !ISBLANK($plot_length_m);\n  if (pwb && plb && pw>pl){\n    SETVALUE('plot_width_m',pl);\n    SETVALUE('plot_length_m',pw);\n    ALERT('A length is bigger than a width for a rectangle.');\n    return true;\n  }\n  return false;\n}\n\n/*\n * Data Quality Control View\n */\n\nfunction loadDataQualityControl(){\n  var readOnlyDataQuality = ['data_quality_control','deleted','deleted_by','date_deleted','verification','verified_by','date_verified','submission','submitted_by','date_submitted','approbation','approved_by','date_approved','rejection','rejected_by','date_rejected','publication','published_by','date_published'];\n  \n  readOnlyDataQuality.forEach(function(element) {\n    SETREADONLY(element, true);\n    SETHIDDEN(element,true);\n  });\n  \n  var status = STATUS();\n  if (status=='deleted'){\n    SETHIDDEN('data_quality_control',false);\n    SETHIDDEN('deleted',false);\n    SETHIDDEN('deleted_by',false);\n    SETHIDDEN('date_deleted',false);\n  } else {\n    if (status!='pending'){\n      SETHIDDEN('data_quality_control',false);\n      SETHIDDEN('verification',false);\n      SETHIDDEN('verified_by',false);\n      SETHIDDEN('date_verified',false);\n      if (isRejected()) {\n        SETHIDDEN('rejection',false);\n        SETHIDDEN('rejected_by',false);\n        SETHIDDEN('date_rejected',false);\n      }\n      if (status!='verified'){\n        SETHIDDEN('submission',false);\n        SETHIDDEN('submitted_by',false);\n        SETHIDDEN('date_submitted',false);\n      }\n      if (status=='published' || status=='approved'){\n        SETHIDDEN('approbation',false);\n        SETHIDDEN('approved_by',false);\n        SETHIDDEN('date_approved',false);\n      }\n      if (status=='published'){\n        SETHIDDEN('publication',false);\n        SETHIDDEN('published_by',false);\n        SETHIDDEN('date_published',false);\n      }\n    }\n  }\n}\n\n/*\n * DRAFT TEST\n */\nfunction isAbsent(b,element){\n  if (!EXISTS(element) || VALUE(element)=='' || !VALUE(element)){\n    return true;\n  }\n  return b;\n}\n\nfunction tabAbsence(b,tab){\n  tab.forEach(function(element) {\n    b = isAbsent(b,element);\n  });\n  return b;\n}  \n\nfunction isDraft(){\n  var b = false;\n  if (!PROJECTNAME()) {\n    b = true;\n  }\n  var val = ['first_established_by','date_first_established','plot_shape'];\n  b = tabAbsence(b,val);\n  var ps = CHOICEVALUE($plot_shape);\n  if (ps=='square'||ps=='rectangular'){\n    if ( ISBLANK($plot_length_m) || ISBLANK($plot_width_m) || ISBLANK($azimuth_width_degrees) ){\n      b = true;\n    }\n  } else if (ps=='circular'){\n    if ( ISBLANK($plot_diameter_m)){\n      b = true;\n    }\n  }\n  return b;\n}\n\n\n\n/*****************************************************************\n                        FUNCTION CALL\n******************************************************************/\nfunction callback(event) {\n\n  /*****************************\n            LOAD RECORD\n  ******************************/\n  if (event.name === 'load-record') {\n    // Grab the project name\n    projectNameGV = PROJECTNAME();\n    if (ISROLE(fieldUserRolesGV)) {\n      SETSTATUSFILTER(['pending']);\n    }\n    changeValues();\n    updateLocationInfoFromCorners();\n  }\n  \n  /*****************************\n            NEW RECORD\n  ******************************/\n  // Assign plant ID using timestamp with 8 characters\n  // Assign observed name as default user\n  if (event.name === 'new-record') {\n    var timenow = ONCE(FLOOR((Date.now() - 1519142458000) / 1000));\n    SETVALUE('plot_id', timenow);\n    var username = USERFULLNAME();\n    SETVALUE('first_established_by', username);\n    loadDataQualityControl();\n  }\n\n  /*****************************\n            EDIT RECORD\n  ******************************/\n  if (event.name === 'edit-record') {\n    /*\n    - For field users, only show 'submitted' status when 'verified'\n      if the current role is one of the designated field user roles...\n    - make record and read-only if verified, submitted, approved or published\n    - lock status and project to all standard users when verified except person who verified\n    - lock status to all standard users when submitted\n    */\n    if (isReadOnly()){ // \n      // make read-only\n      readOnlyValues();\n      setConfig4LocationDraft(false);\n      if (isStandardUser()){\n        // add the submitted status\n        SETSTATUSFILTER(['pending', 'verified', 'submitted', 'deleted']);\n        if (isRejected()){\n          SETSTATUSFILTER(['rejected', 'verified', 'submitted', 'deleted']);\n        }\n        // lock the record status\n        SETREADONLY('@status', true);\n        //... except for verified by the standard user who verified the record\n        if ((usernameGV == $verified_by) && (STATUS() == 'verified')) {\n          SETREADONLY('@status', false);\n        }\n      }\n    } else {\n      if (!isDraft() && isStandardUser()){\n        SETSTATUSFILTER(['pending', 'verified', 'deleted']);\n        if (isRejected()){\n          SETSTATUSFILTER(['rejected', 'verified', 'deleted']);\n        }\n      }\n      SETREADONLY('@status', false);\n      /* GPS Information */\n      if (VALUE('horizontal_accuracy') === ''){\n        SETVALUE('horizontal_accuracy',horizontalAccuracyNoMatters());\n      }\n      if (VALUE('vertical_accuracy') === ''){\n        SETVALUE('vertical_accuracy',verticalAccuracyNoMatters());\n      }\n    }\n    loadDataQualityControl();\n  }\n\n  /*****************************\n            VALIDATE RECORD\n  ******************************/\n  if (event.name === 'validate-record') {\n    if (!PROJECTNAME()) {\n      INVALID('Select a project before saving.');\n    }\n    if (notSameCornersNumber() && isReadOnly()){\n      INVALID('You cannot change the number of plot corners under the current status.');\n    }\n    testPlotIsASquare();\n    testPlotCheckRectangular();\n  }\n\n  /*****************************\n            SAVE RECORD\n  ******************************/\n  if (event.name === 'save-record') {\n    if (isReadOnly()) {\n      SETPROJECT(projectNameGV);\n    }\n  }\n  \n  /*****************************\n            CHANGE STATUS\n  ******************************/\n  if (event.name === 'change-status') {\n    var today = new Date();\n    var status = STATUS();\n\n    if (status == 'pending'|| status == 'rejected') {\n      changeValues();\n    }\n\n    if (status == 'pending') {\n      if (isStandardUser()){\n        SETSTATUSFILTER(['pending']);\n      }\n    } else if (status == 'rejected') {\n      if (isStandardUser()){\n        SETSTATUSFILTER(['rejected']);\n      } else {\n        var numR = 1;\n        if (EXISTS($number_of_rejections)){\n          numR = $number_of_rejections+1;\n        }\n        SETVALUE('number_of_rejections',numR);\n        SETVALUE('rejected_by', usernameGV);\n        SETVALUE('date_rejected', today);\n      }\n    } else if (status == 'verified') {\n      readOnlyValues();\n      setNumOfCorners();\n      SETVALUE('verified_by', usernameGV);\n      SETVALUE('date_verified', today);\n      projectNameGV = PROJECTNAME();\n      ALERT('This will make the record read-only for all other standard users.');\n    } else if (status == 'deleted') {\n      readOnlyValues();\n      setNumOfCorners();\n      SETVALUE('deleted_by', usernameGV);\n      SETVALUE('date_deleted', today);\n      ALERT('This will make the record read-only for all other standard users. Deleted records can no longer be edited by standard users.');\n    } else if (status == 'submitted') {\n      SETVALUE('submitted_by', usernameGV);\n      SETVALUE('date_submitted', today);\n      ALERT('This will submit the record to the data manager for approval. Submitted records can no longer be edited by standard users.');\n    } else if (status == 'approved') {\n      SETVALUE('approved_by', usernameGV);\n      SETVALUE('date_approved', today);\n    } else if (status == 'published') {\n      SETVALUE('published_by', usernameGV);\n      SETVALUE('date_published', today);\n    }\n    loadDataQualityControl();\n  }\n\n  /*****************************\n            CHANGE PROJECT\n  ******************************/\n  // save user name and date for data control steps\n  if (event.name === 'change-project') {\n    if (projectNameGV != \"\" && isReadOnly()) {\n      ALERT('The project can not be changed for this status');\n      SETPROJECT(projectNameGV);\n    }\n  }\n\n  /*****************************\n            CHANGE GEOMETRY\n  ******************************/\n  if (event.name === 'change-geometry') {\n    // On main record object\n    if (!EXISTS(event.field)) {\n      var status = STATUS();\n      if (status=== 'pending' || status=== 'rejected') {\n        SETVALUE('horizontal_accuracy','');\n        SETVALUE('vertical_accuracy','');\n        SETREADONLY('altitude', false);\n        SETREADONLY('horizontal_accuracy', false);\n        SETREADONLY('vertical_accuracy', false);\n        SETVALUE('altitude', '');\n        SETVALUE('latitude', getLatitude());\n        SETVALUE('longitude', getLongitude());\n      } else {\n        SETLOCATION(VALUE('latitude'),VALUE('longitude'));\n      }\n    }\n    // On main record object\n    if (event.field=='corners') {\n      var status = STATUS();\n      if (status=== 'pending' || status=== 'rejected') {\n        SETVALUE('corner_horizontal_accuracy_m','');\n        SETVALUE('corner_vertical_accuracy_m','');\n        SETREADONLY('corner_altitude_m', false);\n        SETREADONLY('corner_horizontal_accuracy_m', false);\n        SETREADONLY('corner_vertical_accuracy_m', false);\n        SETVALUE('corner_altitude_m', '');\n        SETVALUE('corner_latitude_degrees', getLatitude());\n        SETVALUE('corner_longitude_degrees', getLongitude());\n      } else {\n        SETLOCATION(VALUE('corner_latitude_degrees'),VALUE('corner_longitude_degrees'));\n      }\n    }\n  }\n\n  /*****************************\n            CHANGE\n  ******************************/\n  if (event.name === 'change'){\n    \n    /******  site  *****/\n    // When site record is added, hide other fields\n    if (event.field === 'site'){\n      if (ISBLANK($site)) {\n        //ALERT(\"Ask co-workers if the site record has been created on another device but not yet synced.\"+\"\\n\\n\"+\"If so, write its Site ID below, save your record as draft.\"+\"\\n\"+\"Then link the site record once it becomes available.\"+\"\\n***********\\n\"+\"If not, save your record as draft and create the site record in the 'Sites' app.\");\n        //ALERT(\"Ask co-workers if a site has been created on another device but not yet synced.\"+\"\\n\\n\"+\"If not, create a new site.\");\n      }\n    }\n    if (event.field === 'plot_length_m' || event.field === 'plot_width_m'){\n      var ps = CHOICEVALUE($plot_shape);\n      if (ps=='rectangular'){\n        plotCheckRectangular();\n        plotIsASquare();\n      }\n    }\n    if (event.field === 'plot_width_m'){\n      var ps = CHOICEVALUE($plot_shape);\n      if (ps=='square'){\n        SETVALUE('plot_length_m','');\n      }\n    }\n    if (event.field === 'plot_shape'){\n      var ps = CHOICEVALUE($plot_shape);\n      if (ps=='square'||ps=='rectangular'){\n        SETVALUE('plot_diameter_m','');\n      }\n      if (ps=='square'){\n        SETVALUE('plot_length_m','');\n      }\n      if (ps=='circular'){\n        SETVALUE('plot_length_m','');\n        SETVALUE('plot_width_m','');\n        SETVALUE('azimuth_width_degrees','');\n      }\n    }\n    \n    /*\n     * \n     */\n    if (event.field === 'corner_field_id'){\n      updateCornerId();\n    }\n  }\n\n  /*****************************\n            CLICK\n  ******************************/\n  if (event.name === 'click'){\n\n    // UPDATE GPS POSITION\n    if (event.field === 'update_location_with_gps'){\n      var status = STATUS();\n      if (status=== 'pending' || status=== 'rejected') {\n        var lat = getGPSLatitude();\n        var lon = getGPSLongitude();\n        var alt = getGPSAltitude();\n        SETVALUE('latitude', lat);\n        SETVALUE('longitude', lon);\n        SETLOCATION(lat,lon);\n        //SETREADONLY('altitude', true);\n        SETVALUE('altitude', alt);\n        SETVALUE('horizontal_accuracy',getGPSHAccuracy());\n        SETVALUE('vertical_accuracy',verticalAccuracyNoMatters());\n      } else {\n        SETLOCATION(VALUE('latitude'),VALUE('longitude'));\n      }\n    }\n    \n    // UPDATE CORNER GPS POSITION\n    if (event.field === 'update_corner_location_with_gps'){\n      var status = STATUS();\n      if (status=== 'pending' || status=== 'rejected') {\n        var lat = getGPSLatitude();\n        var lon = getGPSLongitude();\n        var alt = getGPSAltitude();\n        SETVALUE('corner_latitude_degrees', lat);\n        SETVALUE('corner_longitude_degrees', lon);\n        SETLOCATION(lat,lon);\n        //SETREADONLY('altitude', true);\n        SETVALUE('corner_altitude_m', alt);\n        SETVALUE('corner_horizontal_accuracy_m',getGPSHAccuracy());\n        SETVALUE('corner_vertical_accuracy_m',verticalAccuracyNoMatters());\n      } else {\n        SETLOCATION(VALUE('latitude'),VALUE('longitude'));\n      }\n    }\n  }\n\n  /*****************************\n            REPEATABLE\n  ******************************/\n  if (event.name === 'new-repeatable'){\n    // Assign a default incremental value\n    if (event.field === 'corners') {\n      var serial = REPEATABLENUMBER();\n      SETVALUE('corner_number', serial);\n    }\n  }\n\n  if (event.name === 'validate-repeatable'){\n    if (event.field === 'corners') {\n      if (isReadOnly()){\n        INVALID('You cannot add plot corners under the current status.');\n      }\n    }\n  }\n  if (event.name === 'save-repeatable'){\n    if (event.field === 'corners') {\n      updateLocationInfoFromCorners();\n    }\n  }\n}\n\n/********** FUNCTIONS **********/\nON('load-record', callback);\nON('new-record', callback);\nON('edit-record', callback);\nON('validate-record', callback);\nON('save-record', callback);\nON('change-status', callback);\nON('change-project', callback);\nON('change-geometry', callback);\nON('change-geometry', 'corners', callback);\nON('change', 'site', callback);\nON('change', 'plot_shape', callback);\nON('change', 'plot_length_m', callback);\nON('change', 'plot_width_m', callback);\nON('change', 'corner_field_id', callback);\nON('click', 'update_location_with_gps', callback);\nON('click', 'update_corner_location_with_gps', callback);\nON('new-repeatable', 'corners', callback);\nON('validate-repeatable', 'corners', callback);\nON('save-repeatable', 'corners', callback);\n",
  "status_field": {
    "choices": [
      {
        "color": "#FF8819",
        "label": "Pending Verification",
        "value": "pending"
      },
      {
        "color": "#CB0D0C",
        "label": "Rejected",
        "value": "rejected"
      },
      {
        "color": "#1891C9",
        "label": "Verified",
        "value": "verified"
      },
      {
        "color": "#87D30F",
        "label": "Submitted",
        "value": "submitted"
      },
      {
        "color": "#2D5D00",
        "label": "Approved",
        "value": "approved"
      },
      {
        "color": "#2D5D00",
        "label": "Published",
        "value": "published"
      },
      {
        "color": "#242424",
        "label": "Deleted",
        "value": "deleted"
      }
    ],
    "data_name": "record_status",
    "default_previous_value": false,
    "default_value": "pending",
    "description": "Status of record. Record first requires verification. Once verified, it can be submitted for approval; this locks the record for standard users. If approved, the record eventually gets published. If rejected, it goes back to standard users for further verification.",
    "disabled": false,
    "enabled": true,
    "hidden": false,
    "key": "@status",
    "label": "Record Status",
    "read_only": false,
    "required": false,
    "type": "StatusField"
  },
  "title_field_keys": [
    "2eaa",
    "8a8c",
    "8d8f"
  ],
  "updated_at": "2018-08-21T19:50:58Z",
  "version": 298
}
